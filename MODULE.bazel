module(
    name = "pjrt_plugins",
)

bazel_dep(name = "aspect_bazel_lib", version = "2.11.0")
bazel_dep(name = "rules_license", version = "1.0.0")
bazel_dep(name = "rules_oci", version = "2.2.0", dev_dependency = True)
bazel_dep(name = "container_structure_test", version = "1.16.0", dev_dependency = True)
bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "zstd", version = "1.5.6")
bazel_dep(name = "rules_distroless", version = "0.3.3")
git_override(
    module_name = "rules_distroless",
    commit = "c469ab3239d0dbe0b49a251ce75971259bf7a242",
    remote = "https://github.com/zml/rules_distroless",
)

bazel_lib_toolchains = use_extension("@aspect_bazel_lib//lib:extensions.bzl", "toolchains")
use_repo(bazel_lib_toolchains, "zstd_toolchains")

xla_layer = use_extension("//third_party/openxla:xla.bzl", "xla")
use_repo(xla_layer, "openxla")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "cuda_base",
    digest = "sha256:12242992c121f6cab0ca11bccbaaf757db893b3065d7db74b933e59f321b2cf4",
    image = "docker.io/nvidia/cuda:12.8.0-base-ubuntu22.04",
    platforms = [
        "linux/amd64",
    ],
)

oci.pull(
    name = "rocm_base",
    digest = "sha256:982ececbe9a06b8f1fffb3cd1b3e5803cdf0894286e590d0b1c83de844699770",
    image = "docker.io/rocm/tensorflow-build:latest-jammy-python3.9-rocm6.3.0",
    platforms = [
        "linux/amd64",
    ],
)
use_repo(oci, "cuda_base","cuda_base_linux_amd64", "rocm_base", "rocm_base_linux_amd64")

apt = use_extension("@rules_distroless//apt:extensions.bzl", "apt")
apt.install(
    name = "noble_ubuntu",
    manifest = "//base/noble:packages.yaml",
)
apt.install(
    name = "focal_ubuntu",
    manifest = "//base/focal:packages.yaml",
)
apt.install(
    name = "jammy_ubuntu",
    manifest = "//base/jammy:packages.yaml",
)
apt.install(
    name = "rocm_ubuntu",
    manifest = "//rocm:rocm_ubuntu.yaml",
)
apt.install(
    name = "cuda_ubuntu",
    manifest = "//cuda:cuda_ubuntu.yaml",
)
apt.install(
    name = "cpu_ubuntu",
    manifest = "//cpu:cpu_ubuntu.yaml",
)

use_repo(apt, "rocm_ubuntu", "noble_ubuntu", "focal_ubuntu", "jammy_ubuntu", "cuda_ubuntu", "cpu_ubuntu")

bazelisk = use_extension("//utils/bazel/bazelisk:bazelisk.bzl", "bazelisk")
use_repo(
    bazelisk,
    "bazelisk",
)
